import{d as m,S as L,g as _}from"./util.aa084a86.js";/* empty css             */const h={};for(let o=0;o<m.length;o++){const l=m[o][0];let t=Math.round(parseFloat(m[o][1])),n=_(t);h[l]=n}document.querySelector("#clear-btn").onclick=()=>{confirm("Delete local data? (server data is retained in the public dataset)")&&(localStorage.clear(),window.location.href="/")};const w=document.querySelector("#results-summary");if(localStorage.getItem("results")){const o=JSON.parse(localStorage.getItem("results")),l=o.guesses,t=o.guesses.filter(e=>e.correct).length,n=Math.round(t/l.length*100);w.textContent=`Accuracy: ${n}%. Total answered: ${l.length}. Correct: ${t}`;const r=document.querySelector("#results-table");for(let e=0;e<l.length;e++){const c=l[e],s=document.createElement("tr"),{job_title:a,guess:i}=c,d=h[a],g=d==i?"\u2705":"\u274C";c.answer=d;let u="blue";d=="republican"?u="red":d=="mixed"&&(u="mixed"),s.innerHTML=`<td>${g}${a}</td>
        <td>${i}</td>
        <td class=${u}>${d}</td>`,r.appendChild(s)}document.querySelector("#download-data-btn").onclick=()=>{const e=p(l),c=new Blob([e],{type:"text/csv"}),s=window.URL.createObjectURL(c),a=document.createElement("a");a.setAttribute("href",s),a.setAttribute("download","shape-of-america-user-data.csv"),a.click(),window.URL.revokeObjectURL(s)}}else w.textContent="No results found!";async function S(){const o=await(await fetch(`${L}global-tally`)).json(),l=document.querySelector("#global-results-table");for(let t of o){const{job_title:n,democrat:r,republican:e,mixed:c,answer:s}=t;let a=r;s=="republican"&&(a=e),s=="mixed"&&(a=c);let i=a/(r+e+c);i=Math.round(i*100);const d=document.createElement("tr");d.innerHTML=`<td>${n}</td>
        <td>${r}</td>
        <td>${e}</td>
        <td>${c}</td>
        <td>${i}%</td>`,l.appendChild(d)}document.querySelector("#download-global-data-btn").onclick=()=>{const t=p(o),n=new Blob([t],{type:"text/csv"}),r=window.URL.createObjectURL(n),e=document.createElement("a");e.setAttribute("href",r),e.setAttribute("download","shape-of-america-global-data.csv"),e.click(),window.URL.revokeObjectURL(r)}}S();function y(o,l,t=!0){let n,r,e,c,s,a;for(r=!0;r;){for(r=!1,n=l.rows,e=1;e<n.length-1;e++){if(a=!1,c=n[e].getElementsByTagName("td")[o+1],s=n[e+1].getElementsByTagName("td")[o+1],!t){let u=c;c=s,s=u}let i=c.innerHTML.toLowerCase()>s.innerHTML.toLowerCase(),d=parseInt(c.innerHTML.toLowerCase())>parseInt(s.innerHTML.toLowerCase()),g=i;if(parseInt(c.innerHTML)&&(g=d),g){a=!0;break}}a&&(n[e].parentNode.insertBefore(n[e+1],n[e]),r=!0)}}const b=document.querySelector("#results-table-container");b.querySelectorAll("th").forEach(o=>o.addEventListener("click",l=>{window.column_toggled==null&&(window.column_toggled={});const t=Number(l.target.dataset.index);window.column_toggled[t]=!window.column_toggled[t],y(t,b,window.column_toggled[t])}));const f=document.querySelector("#global-results-table-container");f.querySelectorAll("th").forEach(o=>o.addEventListener("click",l=>{window.column_toggled_global==null&&(window.column_toggled_global={});const t=Number(l.target.dataset.index);window.column_toggled_global[t]=!window.column_toggled_global[t],y(t,f,window.column_toggled_global[t])}));function p(o){const l=Object.keys(o[0]),t=[l.join(",")];return o.forEach(n=>{const r=l.map(e=>`"${n[e]}"`);t.push(r.join(","))}),t.join(`
`)}
